@prefix : <http://ontology.causeex.com/ontology/odps/GeneralConcepts#> .
@prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix general: <http://ontology.causeex.com/ontology/odps/GeneralConcepts#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://ontology.causeex.com/ontology/odps/GeneralConcepts> rdf:type owl:Ontology ;
    dcterms:description "Ontology defining general concepts used in the Causal Exploration program."@en ;
    dcterms:created "February 25, 2018"^^xsd:string ;
    dcterms:modified "May 15, 2019"^^xsd:string ;
    rdfs:comment """May 15th 2019 revisions:
                    Updated the comment/description for position_or_role.
                    Corrected the domain and comment for xxx_exemplar.
                  May 12th 2019 revisions:
                    Condensed multiple rdfs:comment statements to one.
                    Added noun/verb_exemplar annotation properties.
                    Corrected text related to using Wikipedia references for position__or_role.
                    Corrected owl:min/maxInclusive to be xsd:min/maxInclusive.
                  January 22nd 2019 revisions:
                    Clarified the description/usage of position_or_role.
                    Added the description property from the DataProvenance and ICM ontologies.
                    Moved the location-related and time-related concepts into separate ontologies (GeneralConcepts-Location, GeneralConcepts-Time).
                  November 15th 2018 revisions:
                    Added the is_about, is_dependent_on and is_independent_of properties.
                  October 27th 2018 revisions:
                    Corrected the regex for IPV4 and V6Address, and beginning/ending_hour_and_minute/month_and_day.
                    Added the concepts of RecurrencePattern, DayOfWeek and RecurrenceInterval, and their related properties 
                      (recurs, has_recurrence_interval, beginning/ending_month_and_day, beginning/ending_hour_and_minute, has_day_of_week, 
                      week/day_of_month and/or separation_interval).
                    Added the LocationDetails class and the related_location property. Modified the ranges of the located_at/near properties.
                    Added IndividualClassification and is_classified_individual and is_possible_classification_ref or 
                      is_positive/negative_classification_ref.
                    Added a Cryptocurrency class.
                    Moved the individual currencies missed from CCO to their own ontology (CurrencyUnits).
                    Commented out references to cco: classes that are only used in equivalencies and sub-class declarations. 
                    Added the concept of a geopolitical Territory. 
                    Added the relevant CCO imports versus adding all.
                    Removed ontology history older than 6 months.
                   September 24th 2018 revisions:
                     Removed sub-property declaration for has_member and moved it to has_component (has_component is a 
                       sub-property of has_member, not vice versa).
                     Changed generic to be a Functional, Datatype property (was incorrectly defined as a Class).
                     Changed all rdfs:Literal datatypes to xsd:string, all xsd:doubles to xsd:decimal or xsd:double, and
                       all xsd:int to xsd:integer.
                     Updated the description for associated_monetary_amount and has_currency.
                   June 27th 2018 revisions:
                     Added the class :ShortenedHierarchy and subclassed cco:CellularTelecommunicationNetwork and 
                       cco:ControlledAccessHighway from it.
                     Added cco:SeaLevel to the subclasses of PhysicalLocation. 
                     Removed cco:GeospatialRegion from the subclasses of PhysicalLocation and instead listed cco:Continent,
                       cco:Subcontinent, cco:GeopoliticalEntity and cco:GeopoliticalEntityPart.
                   May 31st 2018 revisions:
                     Added sub-classing of cco:GeospatialRegion, cco:Facility, ... from PhysicalLocation.
                     Moved the range definition for associated_monetary_amount to the TimeSeriesAndMeasurements ontology.
                     Added several missing currency units (missing from CCO).
                     Added a sub-class of PhysicalLocation, PathRoadOrRoute, and a sub-class of VirtualLocation, Border.
                     Removed the domain definition for has_currency since it can be a MonetaryAmount, meas:TimeSeries or meas:ReportedValue.
                     Removed BoundingCoordinate since it is simply a PhysicalLocation with a latitude/longitude.
                     Added recommendations on mapping low-medium-high confidence and weak-strong strength values to the 0-1 scale of 
                       numeric_confidence and numeric_credibility.
                     Removed the largest/smallest_possible_measurement_value properties, which should have been deleted in the 
                       April 20th revisions.
                     Changed the range of amount and largest/smallest_possible_amount to be doubles or decimals.
                   April 20th 2018 revisions:
                     Extended the range definition of involves_goods_or_property to include PhysicalLocation.
                     Removed MeasurementAmount and its related properties. Is replaced with the semantics of the 
                       TimeSeriesAndMeasurements ontology."""@en ;
#   owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AllCoreOntology> ;
    owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/ArtifactOntology> ;
    owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/CurrencyUnitOntology>;
    owl:imports <http://purl.org/dc/terms> ;
    owl:versionInfo "Version 1.91"^^xsd:string .


#################################################################
#    Object Properties
#################################################################

:associated_monetary_amount a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "associated monetary amount"@en ;
    rdfs:comment "Indicates that monies quantify or were/are involved in/associated with an individual. For example, monies may be received in a bank deposit transaction or specify the amount to be received yearly as a job salary. The monetary details are specified using the properties (has_currency and the several 'amount'-related properties) of the MonetaryAmount individual. Note that the domain definition for associated_monetary_amount is defined in the TimeSeriesAndMeasurements ontology, since it is a union of general:MonetaryAmount and other classes defined in that ontology."@en ;
    rdfs:range :MonetaryAmount .

:has_component a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "has component"@en ;
    rdfs:comment "Indicates a whole-part relationship between the 'whole'/domain referent and the 'part'/range referent."@en ;
    rdfs:subPropertyOf :has_member .

:has_currency a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has currency"@en ;
    rdfs:comment "Indicates the currency of the 'amount' specified for a MonetaryAmount individual. The currency is specified as one of the individuals in the CCO CurrencyUnit ontology. Note that the domain definition for has_currency is defined in the TimeSeriesAndMeasurements ontology, since it is a union of general:MonetaryAmount and other classes defined in that ontology."@en ;
    rdfs:range cco:CurrencyUnit .

:has_identifier a owl:ObjectProperty ;
    rdfs:label "has identifier"@en ;
    rdfs:range :Identifier .

:has_member a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "has member"@en ;
    rdfs:comment "Indicates membership in a Collection."@en ;
    rdfs:domain :Collection .

:is_about a owl:ObjectProperty ;
    rdfs:label "is about"@en ;
    rdfs:comment "Relationship describing that an cco:InformationBearingArtifact (such as a cco:Book or cco:Video) concerns some individual."@en ;
    rdfs:domain cco:InformationBearingArtifact .

:is_classified_individual a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "is classified individual"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be formally classified using a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive/negative_classification_ref."@en ;
    rdfs:domain :IndividualClassification .

:is_dependent_on a owl:ObjectProperty ;
    rdfs:label "is dependent on"@en ;
    rdfs:comment "Indicates that the subject requires/relies on/is dependent on the entity referenced as the object. This semantic can be reified using the event:Dependence/Independence Factors."@en .

:is_independent_of a owl:ObjectProperty ;
    rdfs:label "is independent of"@en ;
    rdfs:comment "Indicates that the subject is not dependent on the entity referenced as the object. This semantic can be reified using the event:Dependence/Independence Factors."@en .

:is_negative_classification_ref a owl:ObjectProperty ;
    rdfs:label "is negative classification reference"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be classified as a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications that exist for the individual would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "The value of the is_negative_classification_ref is the IRI of a possible classification of the individual - one that negates the semantics. An example is a TimeSeries reporting 'investment in water and sanitation with private participation'. This might be classified as supporting/negating any of the following Event sub-classes, PromotionOfWaterSanitationAndHygiene, WaterSecurity, WaterInsecurity, SanitaryConditions, UnsanitaryConditions, ContaminatedWater, WaterManagementLandUse or InfrastructureAndUtilities, depending on the need. In this case, not all of the relationships are positive/supporting. For example, the TimeSeries ClassificationIndividual would reference WaterInsecurity, UnsanitaryConditions and ContaminatedWater using the is_negative_classification_ref property, while the other classes would be referenced using is_positive_classification_ref. Each possible classification could have its own confidence."@en ;
    rdfs:comment "Class IRIs are provided using this property, and OWL puning is assumed (meaning that the class IRI is treated as a individual of the 'metaconcept' of  the class)."@en ;
    rdfs:domain :IndividualClassification ;
    rdfs:subPropertyOf :is_possible_classification_ref .

:is_positive_classification_ref a owl:ObjectProperty ;
    rdfs:label "is positive classification reference"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be classified as a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications that exist for the individual would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "The value of the is_positive_classification_ref is the IRI of a possible classification of the individual - one that aligns with the semantics. An example is a TimeSeries reporting 'investment in water and sanitation with private participation'. This might be classified as supporting/negating any of the following Event sub-classes, PromotionOfWaterSanitationAndHygiene, WaterSecurity, WaterInsecurity, SanitaryConditions, UnsanitaryConditions, ContaminatedWater, WaterManagement or InfrastructureAndUtilities, depending on the need. In this case, not all of the relationships are positive/supporting. For example, the TimeSeries ClassificationIndividual would reference WaterInsecurity, UnsanitaryConditions and ContaminatedWater using the is_negative_classification_ref property, while the other classes would be referenced using is_positive_classification_ref. Each possible classification could have its own confidence."@en ;
    rdfs:comment "Class IRIs are provided using this property, and OWL puning is assumed (meaning that the class IRI is treated as a individual of the 'metaconcept' of  the class)."@en ;
    rdfs:domain :IndividualClassification ;
    rdfs:subPropertyOf :is_possible_classification_ref .

:is_possible_classification_ref a owl:ObjectProperty ;
    rdfs:label "is possible classification reference"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using a single class or a union of possible classes. It is used when there is some ambiguity or uncertainty regarding the explicit classification to be used. The ambiguity may be due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be classified as a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications that exist for the individual would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "The value of the is_possible_classification_ref is the IRI of a possible classification of the individual. An example is the location of a GPE identified as 'Niger'. That location could be the country of Niger, or it could be the state of Niger in Nigeria. This could be indicated by classifying the Niger individual as a general:PhysicalLocation and defining two IndividualClassification instances (for example, :CountryOfNigerClassification and :CityOfNigerNigeriaClassification). The latter two individuals would reference the Niger individual using the is_classified_individual property. The first would also reference cco:Country using the is_possible_classification_ref and the second would reference cco:State using that property. There might be two different confidences assigned to these, based on other information in the text. The confidences would be associated with the IndividualClassification instances using general:numeric_confidence."@en ;
    rdfs:comment "Class IRIs are provided using this property, and OWL puning is assumed (meaning that the class IRI is treated as a individual of the 'metaconcept' of  the class)."@en ;
    rdfs:domain :IndividualClassification .

:unifies a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "unifies"@en ;
    rdfs:comment "Relates two individuals, identifying that the subject is an amalgamation/unification of all the information of any individual referenced by this predicate. This property is used when information about an individual is scattered across various sources. Only by reasoning/logic can one determine that the same individual is described by each source. The subject individual is the logical result of defining 'owl:sameAs' relationships between each of the individuals referenced as objects."@en .


#################################################################
#    Data Properties
#################################################################

:amount a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "amount"@en ;
    rdfs:comment "A (double or decimal) value specifying the amount of a MonetaryAmount individual."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:unionOf ( xsd:decimal xsd:double ) ] .

:amount_text a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "amount text"@en ;
    rdfs:comment "A string providing information regarding the amount of a MonetaryAmount individual, when an exact value or range of values is not known. For example, it may be known that a MonetaryAmount involved a 'large sum of money'. In this case, the string would be associated with the MonetaryAmount individual using this property."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range xsd:string .

:canonical_label a owl:DatatypeProperty ;
    rdfs:label "canonical label"@en ;
    rdfs:comment "A string defining a recognized or generally accepted name for an entity, such as a Person or Organization. For example, an Organization such as Amnesty International may have many names (its full text, just 'Amnesty', or its initials). However, the Organization is officially recognized as 'Amnesty International' and the other names are alternatives. This distinction is captured by defining the canonical_label of the Organization as 'Amnesty International' and specifying the other names using rdfs:label. Note that there should only be one canonical_label defined for an individual. However, if that label is specified in different languages, then more than one occurrence of the canonical_label property may be found."@en ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf rdfs:label .

:count a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "number in an implicit or explicit Collection"@en ;
    rdfs:comment "An xsd:integer indicating the number of members of an implicit or explicit Collection. An explicit Collection is an individual classified as a Collection (or one of its sub-classes). An implicit Collection is defined with a specific type/classification but NOT classified as a Collection. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, '3 tanks' could be defined as a single individual with a type of cco:Tank and a count property of 3."@en ;
    rdfs:range xsd:integer .

:count_text a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "count text"@en ;
    rdfs:comment "A string providing information regarding the number of members of an implicit or explicit Collection, when an exact count or range is not known. For example, it may be known that 'scores of people were killed' in an event. In this case, the string could be associated with the Event individual using this property."@en ;
    rdfs:range xsd:string .

:description a owl:DatatypeProperty ;
    rdfs:label "description"@en ;
    rdfs:comment "An overview/representation of an individual."@en ;
    rdfs:range xsd:string .
#   rdfs:subPropertyOf dcterms:description .

:generic a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "generic (boolean)"@en ;
    rdfs:comment "If true, identifies that an individual is a generic concept as opposed to a specific individual/group. For example, when making a generalization about 'all' refugees, then an individual of type, actor:Refugee, would be defined with a general:generic property of 'true'. Or, when maing a statement about the danger of guns, then an individual of type, cco:Firearm, would be defined with a general:generic property of 'true'. On the other hand, when referring to an unnamed group of refugees fleeing from Nigeria to Cameroon, that is still a specific GroupOfPersons with the additional classification of actor:Refugee."@en ;
    rdfs:range xsd:boolean .

:identifier_key a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "Identifier key"@en ;
    rdfs:comment "A string specifying the semantics of the identifier. For example, an identifier key may be a 'country code', a 'MD state driver's license' id, a 'United States passport' id, etc."@en ;
    rdfs:domain :Identifier ;
    rdfs:range xsd:string .

:identifier_value a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "Identifier value"@en ;
    rdfs:comment "A string specifying the text value that 'identifies' an individual."@en ;
    rdfs:domain :Identifier ;
    rdfs:range xsd:string .

:largest_possible_amount a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "largest possible amount"@en ;
    rdfs:comment "A (double or decimal) value specifying the largest possible amount of a MonetaryAmount individual, when an exact value is not known."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:unionOf ( xsd:decimal xsd:double ) ] .

:maximum_possible_count a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "maximum number in an implicit or explicit Collection"@en ;
    rdfs:comment "An xsd:integer indicating the maximum number of members of an implicit or explicit Collection, when an exact number is not known. An explicit Collection is an individual classified as a Collection (or one of its sub-classes). An implicit Collection is defined with a specific type/classification but NOT classified as a Collection. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, 'at least 3 tanks' could be defined as a single individual with a type of cco:Tank and a maximum_possible_count property of 3."@en ;
    rdfs:range xsd:integer .

:minimum_possible_count a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "minimum number in an implicit or explicit Collection"@en ;
    rdfs:comment "An xsd:integer indicating the minimum number of members of an implicit or explicit Collection, when an exact number is not known. An explicit Collection is an individual classified as a Collection (or one of its sub-classes). An implicit Collection is defined with a specific type/classification but NOT classified as a Collection. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, 'at most 3 tanks' could be defined as a single individual with a type of cco:Tank and a minimum_possible_count property of 3."@en ;
    rdfs:range xsd:integer .

:numeric_confidence a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "confidence level"@en ;
    rdfs:comment "A decimal value indicating the probability that the referenced individual is correct. The value must be in the range of 0.00-1.00. To map a qualitative confidence level (such as low-medium-high) to the  0.00-1.00 scale, it is recommended that the following values are used: 'no confidence' = 0.00, 'very low confidence' = 0.10, 'very low to low confidence' = 0.20, 'low confidence' = 0.3, 'low to medium confidence' = 0.40, 'medium confidence' = 0.50, 'medium to high confidence' = 0.60, 'high confidence' = 0.70, 'high to very high confidence' = 0.8, 'very high confidence' = 0.90, and 'total confidence' = 1.0."@en ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:decimal ;
                 owl:withRestrictions ( [ xsd:minInclusive "0.00"^^xsd:decimal ]
                                        [ xsd:maxInclusive "1.00"^^xsd:decimal ] ) ] .

:numeric_credibility a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "credibility"@en ;
    rdfs:comment "A decimal value indicating the probability that the refernced individual is believable/trust-worthy. The value must be in the range of 0.00-1.00. To map a qualitative credibility level (such as low-medium-high) to the  0.00-1.00 scale, it is recommended that the following values are used: 'no confidence' = 0.00, 'very low confidence' = 0.10, 'very low to low confidence' = 0.20, 'low confidence' = 0.3, 'low to medium confidence' = 0.40, 'medium confidence' = 0.50, 'medium to high confidence' = 0.60, 'high confidence' = 0.70, 'high to very high confidence' = 0.8, 'very high confidence' = 0.90, and 'total confidence' = 1.0."@en ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:onDatatype xsd:decimal ;
                 owl:withRestrictions ( [ xsd:minInclusive "0.00"^^xsd:decimal ]
                                        [ xsd:maxInclusive "1.00"^^xsd:decimal ] ) ] .

:plural a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "plural (boolean) indicating an implicit Collection"@en ;
    rdfs:comment "An xsd:boolean defining whether an individual refers to one or multiple tangible objects. This is a mechanism to define an implicit Collection when a 'count' of the individuals in the Collection is not known. It is a short-hand mechanism to represent plurals of tangible entities (such as tanks). For example, 'multiple tanks' could be defined as a single individual with a type of cco:Tank and a plural property of 'true'. Using this property, an individual can identify that it is a plural even if the count is not known. Both plural and count properties can be defined, or only one or the other. Note also that the use of this property implies that the individual is classified using its explicit type (such as cco:Tank) and as a general:Collection."@en ;
    rdfs:range xsd:boolean .

:position_or_role a owl:DatatypeProperty ;
    rdfs:label "position or role"@en ;
    rdfs:comment "Indicates that the referenced individual (an Actor) has an organizational, political or military position, is employed in a certain occupation, or engages in certain activites. Examples of each of these are a Person being a 'shareholder' or 'owner' of a company, or holding the military rank of 'general'. Other examples are persons being a 'farmer', 'teacher' or 'police officer', or engaging in 'activist' or 'revolutionary' activities. The value of the role/position is currently defined as a free-form string, but SHOULD be populated based on the Wikipedia URI, if at all possible. For example, various roles were referenced in the preceding discussion, these would be captured as 'https://en.wikipedia.org/wiki/Shareholder', 'https://en.wikipedia.org/wiki/Ownership', 'https://en.wikipedia.org/wiki/General_officer', 'https://en.wikipedia.org/wiki/Farmer', 'https://en.wikipedia.org/wiki/Teacher', 'https://en.wikipedia.org/wiki/Police_officer', 'https://en.wikipedia.org/wiki/Activism' and 'https://en.wikipedia.org/wiki/Revolutionary'. Note that some Wikipedia references may not exactly match (ownership instead of owner, activism instead of activist), but the intent of the role is still captured. This approach provides a means to standardize the values of the property, without the extensive effort of curating a list of roles and positions. In addition, the Wikipedia entries can be mined for  background."@en ;
    rdfs:comment "Note that in rare cases, position_or_role may be specified for an Event, indicating that the referenced Event involves a position, such as an election Event for the position of 'https://en.wikipedia.org/wiki/President_of_the_United_States'."@en ;
    rdfs:range xsd:string .

:smallest_possible_amount a owl:DatatypeProperty, owl:FunctionalProperty ;
    rdfs:label "smallest possible amount"@en ;
    rdfs:comment "A (double or decimal) value specifying the smallest possible amount of a MonetaryAmount individual, when an exact value is not known."@en ;
    rdfs:domain :MonetaryAmount ;
    rdfs:range [ a rdfs:Datatype ;
                 owl:unionOf ( xsd:decimal xsd:double ) ] .


#################################################################
#    Annotation Properties
#################################################################

:noun_exemplar a owl:AnnotationProperty ;
    rdfs:label "noun exemplar"@en ;
    rdfs:comment "A string providing an example sentence using a noun form of the class/concept."@en ;
    rdfs:range xsd:string .

:verb_exemplar a owl:AnnotationProperty ;
    rdfs:label "verb exemplar"@en ;
    rdfs:comment "A string providing an example sentence using a verb form of the class/concept."@en ;
    rdfs:range xsd:string .


#################################################################
#    Classes
#################################################################

:Collection a owl:Class ;
    rdfs:label "Collection"@en ;
    rdfs:comment "A group of things, whose members are defined using the has_member property."@en .

:Cryptocurrency a owl:Class ;
    rdfs:label "Cryptocurrency"@en ;
    rdfs:subClassOf cco:CurrencyUnit .

:Identifier a owl:Class ;
    rdfs:label "Identifier"@en ;
    rdfs:comment "An individual can have many different codes/ids/... to uniquely identify/distinguish it. Each code/id/.... can be captured as an entity of type, Identifier, whose identifier_key provides information on the what the identifier represents/the identifier's semantics (for example, social security number, driver's license id, country code, ...) and the identifier_value property defines the specific code/id/... The individual being distinguished is related to its Identifier using the has_identifier property. Note that the identifier_value is typically context-specific, based on the source document that specifies it. The source document is defined for an Identifier entity using the Data Provenance ontology's sourced_from property."@en .

:IndividualClassification a owl:Class ;
    rdfs:label "Individual Classification"@en ;
    rdfs:comment "The semantics of IndividualClassification provide an alternative to simply classifying an individual using the most general event:Event, event:Actor or general:Location class, when there is some ambiguity or uncertainty regarding the explicit sub-class to be used. The ambiguity may be due to the words used, due to a lack of information, or because the semantics actually overlap several different sub-classes (as may occur with TimeSeries data or other CollectionsOfEvents). One way to resolve this is to classify the individual as a blank node that is a union of the possible types. But, this approach does not allow for specifying uncertainty or the preferred classification. Using IndividualClassification, an individual may be classified as one of a number of different types, with different confidences."@en ;
    rdfs:comment "The individual whose semantics are ambiguous would be formally classified using a generic event:Event, event:Actor or general:Location type and would be referenced by two or more IndividualClassification instances (using the is_classified_individual property). The possible, more specific classifications would be referenced using the is_possible_classification_ref property or its sub-properties, is_positive_classification_ref and is_negative_classification_ref."@en ;
    rdfs:comment "An example is needed to illustrate the concept. Assume that a location of Niger is encountered in text. That location could be the country of Niger, or it could be the state of Niger in Nigeria. This could be indicated by classifying the Niger individual as a general:PhysicalLocation and defining two IndividualClassification instances. These might be :CountryOfNigerClassification and :CityOfNigerNigeriaClassification. The latter two individuals would reference the Niger individual using the is_classified_individual property. The first would also reference cco:Country using the is_possible_classification_ref and the second would reference cco:State using that property. There might be two different confidences assigned to these, based on other information in the text. The confidences would be associated with the IndividualClassification instances using general:numeric_confidence."@en ;
    rdfs:comment "Another example is a TimeSeries reporting 'investment in water and sanitation with private participation'. This might be classified as supporting or negating any of the following Event sub-classes, PromotionOfWaterSanitationAndHygiene, WaterSecurity, WaterInsecurity, SanitaryConditions, UnsanitaryConditions, ContaminatedWater, WaterManagementLandUse or InfrastructureAndUtilities, depending on the need. In this case, not all of the relationships are positive/supporting. For example, the TimeSeries ClassificationIndividual would reference WaterInsecurity, UnsanitaryConditions and ContaminatedWater using the is_negative_classification_ref property, while the other classes would be referenced using is_positive_classification_ref. Each possible classification could have its own confidence."@en .

:MonetaryAmount a owl:Class ;
    rdfs:label "Monetary Amount"@en ;
    rdfs:comment "An individual indicating that a monetary value was/is involved in/associated with an individual. The details of the value are specified using the properties, amount (a decimal value indicating that an exact amount is known), smallest/largest_possible_amount (decimal values indicating that a minimum, maximum or range of values is known) or amount_text (a string indicating that only qualitative information about the amount is known). Also, the property, has_currency, is defined to indicate the monies' currency. has_currency references an individual of type, cco:CurrencyUnit, as its range. None of the properties are required."@en .
