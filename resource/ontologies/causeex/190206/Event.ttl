@prefix : <http://ontology.causeex.com/ontology/odps/Event#> .
@prefix cco: <http://www.ontologyrepository.com/CommonCoreOntologies/> .
# @prefix data-prov: <http://ontology.causeex.com/ontology/odps/DataProvenance#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix event: <http://ontology.causeex.com/ontology/odps/Event#> .
@prefix general: <http://ontology.causeex.com/ontology/odps/GeneralConcepts#> .
# @prefix oeceo: <http://www.ontologylibrary.mil/OperationalEnvironment/Mid/OECausalExplorationOntology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://ontology.causeex.com/ontology/odps/Event> rdf:type owl:Ontology ;
    dcterms:created "January 12, 2018"^^xsd:string ;
    dcterms:modified "January 22, 2019"^^xsd:string ;
    rdfs:comment """January 22nd 2019 revisions:
                    Updated the GeneralConcepts import statement.
                    Moved the range declaration for communicated_in to the DataProvenance ontology to avoid a circular import.
                  November 14th 2018 revisions:
                    Added believed_by.
                  October 22nd 2018 revisions:
                    Added the ActorDetails class and the related_actor property. Also modified the ranges of the has_actor property
                      and its sub-properties and the has_origin/destination properties.  
                    Added CollectionOfEvents. Updated/clarified the description of AggregateEvent and its super-class, and removed 
                      the restiction related to has_sub_event (min cardinality 2).
                    Removed the involves_reported_property definition since TimeSeries and ReportedValues are also considered Events.
                    Commented out references to cco: properties that are only used in sub-property declarations. 
                    Removed prefixes and imports that are not explicitly referenced. 
                    Corrected several rdfs:comments and origin property's label.  
                    Removed ontology history more than 6 months old. 
                  September 17th 2018 revisions:
                    Changed all rdfs:Literal datatype properties to xsd:strings.
                  July 10th 2018 revisions:
                    Changed subclassing (where it was for documentation) involving CCO and OE classes, to a comment.
                  June 11th 2018 revisions:
                    Added is_about_artifact. Removed influenced_by since causal:CausalAssertion will be used.
                    Added a domain of Event to the communicated_by, communicated_in properties.
                    Removed contributed_to since it is less specific than using the Increase/Decrease Event sub-classes.
                  April 20th 2018 revisions:
                    Removed refers_to - involves_goods_or_property can be used instead."""@en ;
#   owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AllCoreOntology> ;
    owl:imports <http://www.ontologyrepository.com/CommonCoreOntologies/Mid/ArtifactOntology> ;
    owl:imports <http://purl.org/dc/terms> ;
#   owl:imports <http://ontology.causeex.com/ontology/odps/DataProvenance> ;
    owl:imports <http://ontology.causeex.com/ontology/odps/GeneralConcepts-Location> ;
    owl:versionInfo "Version 1.7"^^xsd:string .


#################################################################
#    Object Properties
#################################################################

:believed_by a owl:ObjectProperty ;
    rdfs:label "believed by"@en ;
    rdfs:comment "Indicates that an Event/Factor is/was believed/assumed/hypothesized by a specific Actor (Organization, Person, etc.)."@en ;
    rdfs:domain :Event ;
    rdfs:range :Actor .

:communicated_by a owl:ObjectProperty ;
    rdfs:label "communicated by"@en ;
    rdfs:comment "Indicates that an Event was defined using the details as presented/communicated by a specific Actor (Organization, Person, etc.). This semantic is different from the Data Provenance ontology's sourced_from property which indicates the Document from which the Event details were extracted. Instead, this property indicates if the Event details were specifically attributed to an Actor. Examples include statements such as 'from a report by Amnesty International' or 'President George W. Bush stated that'."@en ;
    rdfs:domain :Event ;
    rdfs:range :Actor .

:communicated_in a owl:ObjectProperty ;
    rdfs:label "communicated in"@en ;
    rdfs:comment "Indicates that an Event was defined using the details as presented/communicated in a specific Document or DocumentComponent. This semantic is different from the Data Provenance ontology's sourced_from property which indicates the Document from which the Event details were extracted. Instead, this property indicates if the Event details were specifically attributed to a Document/Component. Examples include statements such as 'from a report by Amnesty International' or 'President George W. Bush's press release stated that'."@en ;
    rdfs:domain :Event .
#   rdfs:range [ a owl:Class ;
#                owl:unionOf (data-prov:Document data-prov:DocumentComponent) ] .
#   owl:equivalentProperty cco:is_mentioned_by .

:defined_by a owl:ObjectProperty, owl:IrreflexiveProperty ;
    rdfs:label "defined by"@en ;
    rdfs:comment "Indicates that a Communication defined/prescribed the details of the referenced Event. For example, a government document (specified in an IssuingPublishingOrReleasing Event) defined the details of a ProvisionOfAid Event. In this case, the triple would be ProvisionOfAid - defined_by - IssuingPublishingOrReleasing, where the latter has a has_instrument property referencing the document individual (a type of cco:Document)."@en ;
    rdfs:domain :Event ;
    rdfs:range :Communication .
#   owl:equivalentProperty cco:prescribed_by .

:has_active_actor a owl:ObjectProperty ;
    rdfs:label "has active actor"@en ;
    rdfs:comment "Indicates that the specified Actor actively participated/did something in an Event. The confidence in the Actor's participation in the Event is defined by associating has_active_actor with an ActorDetails individual (instead of directly associating it with the Actor). The ActorDetails individual in turn references the Actor (using the related_actor property) and includes a value for the general:numeric_confidence property."@en  ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Actor :ActorDetails ) ] ;
    rdfs:subPropertyOf :has_actor .

:has_actor a owl:ObjectProperty ;
    rdfs:label "has actor"@en ;
    rdfs:comment "Indicates that the specified Actor is a participant in an Event. The Actor may be further qualified as the active participant of the event (one who 'did' something), or the participant which was 'acted upon', using the sub-properties, is_active and is_affected. Or, the Actor may be classified as the provider of something or as the recipient using the sub-properties, has_provider and has_recipient."@en ;
    rdfs:comment "The confidence in the Actor's participation in the Event is defined by associating has_actor with an ActorDetails individual (instead of directly associating it with the Actor). The ActorDetails individual in turn references the Actor (using the related_actor property) and includes a value for the general:numeric_confidence property."@en ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Actor :ActorDetails ) ] .

:has_affected_actor a owl:ObjectProperty ;
    rdfs:label "has affected actor"@en ;
    rdfs:comment "Indicates that the specified Actor was a participant in an Event, and was affected by the Event or something was done to them. The confidence in the Actor's participation in the Event is defined by associating has_affected_actor with an ActorDetails individual (instead of directly associating it with the Actor). The ActorDetails individual in turn references the Actor (using the related_actor property) and includes a value for the general:numeric_confidence property.."@en ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Actor :ActorDetails ) ] ;
    rdfs:subPropertyOf :has_actor .

:has_destination a owl:ObjectProperty ;
    rdfs:label "has destination"@en ;
    rdfs:comment "Indicates that movement was/is involved in the referenced Event, and that the specified Location was/is the destination of the movement. By associating to LocationDetails, the Location can be referenced (using the related_location property) along with a confidence that that Location was relevant as the destination of the Event."@en ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( general:Location general:LocationDetails ) ] ;
    rdfs:subPropertyOf general:located_at .

:has_genericity a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has genericity"@en ;
    rdfs:comment "Indicates whether an Event references a 'Specific' or 'Generic' occurence, where the latter are specific individuals in the Genericity enumeration. If not specified for an Event, then 'Specific' should be assumed."@en;
    rdfs:comment "Note that the semantics of this property overlap with the general:generic boolean property. has_genericity is defined to align with the has_modality, has_polarity and has_tense object properties in that an enumeration is defined. This also allows the enumeration to be expanded in the future."@en;
    rdfs:domain :Event ;
    rdfs:range :Genericity .

:has_instrument a owl:ObjectProperty ;
    rdfs:label "has instrument"@en ;
    rdfs:comment "Indicates that the referenced Artifact (weapon, tool, etc.) is/was used/provided/... in the Event. The type of instrument is defined by the CCO Artifact ontology, and extended by the EventArtifact ontology."@en ;
    rdfs:comment "is_about_artifact has a unique semantic from has_instrument. The latter is about using/providing/... an artifact while the former describes something about the artifact."@en ;
    rdfs:domain :Event ;
    rdfs:range cco:Artifact .

:has_modality a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has modality"@en ;
    rdfs:comment "Indicates whether an Event is 'Asserted' or 'Other', where the latter are specific individuals in the Modality enumeration. If not specified for an Event, then 'Asserted' should be assumed."@en;
    rdfs:domain :Event ;
    rdfs:range :Modality .

:has_origin a owl:ObjectProperty ;
    rdfs:label "has origin"@en ;
    rdfs:comment "Indicates that movement was/is involved in the referenced Event, and that the specified Location was/is the originating point of the movement. By associating to LocationDetails, the Location can be referenced (using the related_location property) along with a confidence that that Location was relevant as the originating point for the Event."@en ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( general:Location general:LocationDetails ) ] ;
    rdfs:subPropertyOf general:located_at .

:has_polarity a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has polarity"@en ;
    rdfs:comment "Indicates whether an Event is 'Positive' or 'Negative', where the latter are specific individuals in the Polarity enumeration. If not specified for an Event, then 'Positive' should be assumed."@en;
    rdfs:domain :Event ;
    rdfs:range :Polarity .

:has_provider a owl:ObjectProperty ;
    rdfs:label "has provider"@en ;
    rdfs:comment "Indicates that the specified Actor provided something in an Event. The thing(s) provided are defined using the involves_goods_or_property object property."@en ;
    rdfs:comment "The confidence in the Actor's participation in the Event is defined by associating has_provider with an ActorDetails individual (instead of directly associating it with the Actor). The ActorDetails individual in turn references the Actor (using the related_actor property) and includes a value for the general:numeric_confidence property."@en ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Actor :ActorDetails ) ] ;
    rdfs:subPropertyOf :has_actor .

:has_recipient a owl:ObjectProperty ;
    rdfs:label "has recipient"@en ;
    rdfs:comment "Indicates that the specified Actor received something in an Event. The thing(s) received are defined using the involves_goods_or_property object property."@en ;
    rdfs:comment "The confidence in the Actor's participation in the Event is defined by associating has_recipient with an ActorDetails individual (instead of directly associating it with the Actor). The ActorDetails individual in turn references the Actor (using the related_actor property) and includes a value for the general:numeric_confidence property."@en ;
    rdfs:domain :Event ;
    rdfs:range [ a owl:Class ;
                 owl:unionOf ( :Actor :ActorDetails ) ] ;
    rdfs:subPropertyOf :has_actor .

:has_sub_event a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "has sub-event "@en ;
    rdfs:comment "Indicates that one Event is part of another, 'larger' Event. For example, a news article might indicate that a battle is part of a larger military operation. In the absence of more specific information, the time/location for a sub-event should be assumed to be some unknown values that are within the timespan or location area of the 'larger' Event.  A more precise time/location for the sub-event can be specified if known."@en ;
    rdfs:domain :Event ;
    rdfs:range :Event ;
    rdfs:subPropertyOf general:has_component .

:has_tense a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "has tense"@en ;
    rdfs:comment "Indicates whether an Event is a 'Past', 'Present' or 'Future' Event, where the latter are specific individuals in the Tense enumeration. If not specified for an Event, then 'Past' should be assumed."@en;
    rdfs:domain :Event ;
    rdfs:range :Tense .

:has_topic a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "has topic"@en ;
    rdfs:comment "Indicates that one Event is the subject/topic of another Event. For example, if there was a protest to highlight human rights abuses, then that could be modeled as a 'DemonstrationOrProtest' Event whose 'topic' was a 'HumanRightsAbuse' Event. Similarly, if the demonstration was in support of the government, then the 'topic' would be the DefenseOrSupport of a GPE individual. The actors involved in the demonstration are certainly different than the actors involved in the human rights abuses or the GPE being supported, and this is a straightforward mechanism to reflect this semantic."@en; 
    rdfs:domain :Event ;
    rdfs:range :Event .

:is_about_artifact a owl:ObjectProperty ;
    rdfs:label "is about artifact"@en ;
    rdfs:comment "Property indicating that the semantics of the referencing Event or Factor deal with a specific artifact. For example, an Excess event may describe an excess of a certain food type or fuel. These semantics are 'about' an artifact (an individual of type, event:Food or event:Fuel, in the case of the example). The type of artifact is defined by the CCO Artifact ontology, and extended by the EventArtifact ontology."@en ;
    rdfs:comment "is_about_artifact has a unique semantic from has_instrument. The latter is about using/providing/... an artifact while the former describes something about the artifact."@en ;
    rdfs:domain :Event ;
    rdfs:range cco:Artifact .

:preceded_by a owl:ObjectProperty, owl:IrreflexiveProperty, owl:TransitiveProperty ;
    rdfs:label "preceded by"@en ;
    rdfs:comment "Indicates that one Event occurs before/precedes another. For example, a news article might indicate that a protest followed an act of violence by police. This is different than assigning cause and effect since it is simply re-stating information extracted from the article."@en ;
    rdfs:domain :Event ;
    rdfs:range :Event .

:related_actor a owl:ObjectProperty, owl:FunctionalProperty ;
    rdfs:label "related actor"@en ;
    rdfs:comment "Identifies the specific actor (defined by individuals whose type is a sub-class of :Actor) of an ActorDetails individual."@en ;
    rdfs:domain :ActorDetails ;
    rdfs:range :Actor .


#################################################################
#    Data Properties
#################################################################

:active_actor a owl:DatatypeProperty ;
    rdfs:label "participant that is performing/performed an act"@en ;
    rdfs:comment "A string specifying an actor that did something/actively participated in an Event. This is a different technique for defining the Actor than using an individual. When parsing text, it may be valuable to simply capture the text related to the actor(s), without defining any instances. Instances representing the Actor can then be created at a later time, and used to link that Actor to various events. The string in this property would become the rdfs:label of the Actor individual."@en ;
    rdfs:domain :Event ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf :actor .

:actor a owl:DatatypeProperty ;
    rdfs:label "actor/participant"@en ;
    rdfs:comment "A string specifying an actor that participated/was involved in an Event. This is a different technique for defining the Actor than creating an Actor individual. When parsing text, it may be valuable to simply capture the text related to the actor(s), without defining any instances. Instances representing the Actor can then be created at a later time, and used to link that Actor to various events. The string in this property would become the rdfs:label of the Actor individual. In addition, the subproperties, active_actor and affected_actor, can be used to indicate these roles."@en ;
    rdfs:domain :Event ;
    rdfs:range xsd:string .

:affected_actor a owl:DatatypeProperty ;
    rdfs:label "participant affected by an event/to which something was done"@en ;
    rdfs:comment "A string specifying an actor/participant in an Event, which was affected by the Event or to which something was done. For example, the actor may have been injured (negative) or may be the recipient of an award (positive). This is a different technique for defining the Actor than using an individual. When parsing text, it may be valuable to simply capture the text related to the actor(s), without defining any instances. Instances representing the Actor can then be created at a later time, and used to link that Actor to various events. The string in this property would become the rdfs:label of the Actor individual."@en ;
    rdfs:domain :Event ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf :actor .

:destination a owl:DatatypeProperty ;
    rdfs:label "destination"@en ;
    rdfs:comment "A string specifying the ending/stopping location for a LocationChange/movement-related Event. This is a different technique for defining the location than referencing an individual. When parsing text, it may be valuable to simply capture the text related to the destination, without defining any instances. Instances representing the Location can then be created at a later time, and used to link that Location to various events. The string in this property would become the rdfs:label of the Location individual."@en;
    rdfs:domain :Event ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf general:location .

:origin a owl:DatatypeProperty ;
    rdfs:label "origin"@en ;
    rdfs:comment "A string specifying the beginning/starting location for a LocationChange/movement-related Event. This is a different technique for defining the location than referencing an individual. When parsing text, it may be valuable to simply capture the text related to the origin, without defining any instances. Instances representing the Location can then be created at a later time, and used to link that Location to various events. The string in this property would become the rdfs:label of the Location individual."@en;
    rdfs:domain :Event ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf general:location .

:provider a owl:DatatypeProperty ;
    rdfs:label "participant that provides something"@en ;
    rdfs:comment "A string specifying an actor that provides something in an Event. This is a different technique for defining the Actor than using an individual. When parsing text, it may be valuable to simply capture the text related to the actor(s), without defining any instances. Instances representing the Actor can then be created at a later time, and used to link that Actor to various events. The string in this property would become the rdfs:label of the Actor individual."@en ;
    rdfs:domain :Event ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf :actor .

:recipient a owl:DatatypeProperty ;
    rdfs:label "participant that receives something"@en ;
    rdfs:comment "A string specifying an actor that receives something in an Event. This is a different technique for defining the Actor than using an individual. When parsing text, it may be valuable to simply capture the text related to the actor(s), without defining any instances. Instances representing the Actor can then be created at a later time, and used to link that Actor to various events. The string in this property would become the rdfs:label of the Actor individual."@en ;
    rdfs:domain :Event ;
    rdfs:range xsd:string ;
    rdfs:subPropertyOf :actor .


#################################################################
#    Classes
#################################################################

:Actor a owl:Class ;
    rdfs:label "Actor"@en ;
    rdfs:comment "A participant in an Event, which may be a person or group/organization. There may be zero, one or multiple participants in an Event, defined using the has_actor property. An Actor's role of 'active' participant vs an 'affected' participant can be specified by using the sub-properties of has_actor, has_active_actor and has_affected_actor. An Actor's role of 'provider' or 'recipient' can be specified using the sub-properties of has_actor, has_provider and has_recipient."@en .

:ActorDetails a owl:Class ;
    rdfs:label "Actor Details"@en ;
    rdfs:comment "Identifies that an Event is inferred to involve an Actor, with some probability/confidence. Individuals of this class reify associating an Actor as a participant in an Event and add the general:numeric_confidence property. The confidence in the Actor's role in the Event is defined by using has_actor, has_active/affected_actor or has_provider/recipient to reference an ActorDetails individual. The ActorDetails individual in turn references the specific Actor (using the related_actor property) and includes a value for the general:numeric_confidence property."@en .

:AggregateEvent a owl:Class ;
    rdfs:label "Aggregate Event"@en ;
    rdfs:comment "An Event which is composed of at least two, distinct, component Events that occurred in (roughtly) the same time and place, and involved some (or all) of the same actors. For example, a text might say that 'During the riot, there were 10 deaths and 20 people were injured, as well as $5M of damaged property.' So, a Riot Event would be the main event and also an AggregateEvent. There are other events (related using the has_sub_event property) of Death, Injury and DamageOrDestruction. Each of the latter are also AggregateEvents, although the details of their sub-events may not be known."@en ;
    rdfs:comment "An AggregateEvent should ALWAYS have another classification to indicate its type. And, AggregateEvent should NOT be used to describe groupings of unrelated events across time, actors, etc. That can be done using the CollectionOfEvents class."@en ; 
    rdfs:subClassOf :CollectionOfEvents .

:CollectionOfEvents a owl:Class ;
    rdfs:label "Collection of Events"@en ;
    rdfs:comment "CollectionOfEvents is used to indicate that events are grouped together by a Collection individual. This is the super-class of AggregateEvent as well as TimeSeries. The reason for the grouping may be anything. The members of the Collection are indicated using the general:has_member property."@en ;
    rdfs:subClassOf general:Collection, :Event ;
    owl:equivalentClass [ a owl:Restriction ;
                          owl:onProperty general:has_member ;
                          owl:allValuesFrom :Event ] .

:Communication a owl:Class ;
    rdfs:label "Communication"@en ;
    rdfs:comment "An Event in which information is transferred between Actors or transmitted/published by an Actor. This class defines the information, not how it was trasmitted or published which is the subject of other sub-classes of Event."@en ;
    rdfs:comment "If the Communication is intended to deceive, then the Deception class can also be used to type the individual."@en ;
    rdfs:subClassOf :Event .
# :Communication rdfs:subClassOf cco:ActOfCommunication .

:CorrelatedEvents a owl:Class ;
    rdfs:label "Correlated Events"@en ;
    rdfs:comment "A Collection of Events, defining that the member Events are related or connected, but a cause/effect relationship cannnot be established."@en ; 
    rdfs:subClassOf :CollectionOfEvents .

:EmotionalResponse a owl:Class ;
    rdfs:label "Emotional Response"@en ;
    rdfs:comment "A Person's or GroupOfPerson's positive or negative reaction to an Event or situation. Emotions can motivate subsequent behaviors and actions. They include feelings such as anger, frustration, hope, elation and worry. As for Factor, EmotionalResponse is defined as a sub-class of Event, although it may have no specific location or time, and has no Actors. It is assumed that all EmotionalResponse individuals are defined with a event:has_genericity property equal to event:Generic."@en ;
    rdfs:subClassOf :Event .
#   owl:equivalentClass oeceo:Emotion .

:Event a owl:Class ;
    rdfs:label "Event"@en ;
    rdfs:comment "An occurrence or happening in a (real or virtual) location at some time or over some interval. Typically, an event involves one or more participants and may be influenced by other events. Note that the actual time and location, and the actors/agents involved in the Event, may not be known or may not be applicable (as for a sub-class of Events, Factor)."@en ;
    rdfs:comment "Note that CCO's Act is a logical sub-class of Event, since Event addresses the semantics of both intentional and unintentional acts, while CCO and OE address acts with causative agents."@en .
# cco:Act rdfs:subClassOf :Event .

:Factor a owl:Class ;
    rdfs:label "Factor"@en ;
    rdfs:comment "An identifiable element in the physical, economic or technological environment that contributes to/influences an Event. This is defined as a sub-class of Event, although it may have no specific location, time, or actors. It is assumed that all Factor individuals are defined with a event:has_genericity property equal to event:Generic."@en ;
    rdfs:subClassOf :Event .

:Genericity a owl:Class ;
    rdfs:label "Genericity"@en ;
    rdfs:comment "An enumeration defining whether an individual is a 'Specific' reference or a 'Generic' one. Genericity is defined using the has_genericity property. If not specified, the value should be assumed to be 'Specific'."@en ;
    owl:equivalentClass [ a owl:Class ;
                          owl:oneOf ( :Generic :Specific ) ] .

:Modality a owl:Class ;
    rdfs:label "Modality"@en ;
    rdfs:comment "An enumeration defining whether an Event is 'Asserted' (as true) or 'Other' (meaning that it is possible or contigent). Modality is defined using the has_modality property. If not specified, the value should be assumed to be 'Asserted'."@en ;
    owl:equivalentClass [ a owl:Class ;
                          owl:oneOf ( :Asserted :Other ) ] .

:Polarity a owl:Class ;
    rdfs:label "Polarity"@en ;
    rdfs:comment "An enumeration defining whether an Event is a 'Positive' or 'Negative' statement. Polarity is defined using the has_polarity property. If not specified, the value should be assumed to be 'Positive'."@en ;
    owl:equivalentClass [ a owl:Class ;
                          owl:oneOf ( :Negative :Positive ) ] .

:Tense a owl:Class ;
    rdfs:label "Tense"@en ;
    rdfs:comment "An enumeration defining whether an Event is in the 'Past', 'Present' or 'Future'. Tense is defined using the has_tense property. If not specified, the value should be assumed to be 'Past'."@en ;
    owl:equivalentClass [ a owl:Class ;
                          owl:oneOf ( :Future :Past :Present ) ] .


#################################################################
#    Individuals
#################################################################

:Asserted a owl:NamedIndividual, :Modality ;
    rdfs:label "Asserted Modality (default)"@en .

:Future a owl:NamedIndividual, :Tense ;
    rdfs:label "Future Tense"@en .

:Generic a owl:NamedIndividual, :Genericity ;
    rdfs:label "Generic Genericity"@en .

:Negative a owl:NamedIndividual, :Polarity ;
    rdfs:label "Negative Polarity"@en .

:Other a owl:NamedIndividual, :Modality ;
    rdfs:label "Other Modality"@en .

:Past a owl:NamedIndividual, :Tense ;
    rdfs:label "Past Tense (default)"@en .

:Positive a owl:NamedIndividual, :Polarity ;
    rdfs:label "Positive Polarity (default)"@en .

:Present a owl:NamedIndividual, :Tense ;
    rdfs:label "Present Tense"@en .

:Specific a owl:NamedIndividual, :Genericity ;
    rdfs:label "Specific Genericity (default)"@en .

_:diff1 rdf:type owl:AllDifferent ; 
    owl:members (:Asserted :Future :Generic :Negative :Other :Past :Positive :Present :Specific) .
